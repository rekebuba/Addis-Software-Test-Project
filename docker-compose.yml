services:
  devcontainer:
    container_name: devcontainer
    image: ghcr.io/rekebuba/devcontainer:latest
    privileged: true
    working_dir: /Addis-Software-Test-Project
    environment:
      - PYTHONPATH=/Addis-Software-Test-Project/app/backend
    volumes:
      - .:/Addis-Software-Test-Project:cached
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - app-network
    depends_on:
      - frontend
      - backend
      - db
    command: sleep infinity

  frontend:
    container_name: frontend_container
    image: ghcr.io/rekebuba/frontend:latest
    working_dir: /Addis-Software-Test-Project/app/frontend
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
      - IS_DOCKER=true
    volumes:
      - .:/Addis-Software-Test-Project:cached
    depends_on:
      - backend
    networks:
      - app-network
    stdin_open: true
    tty: true

  backend:
    container_name: backend_container
    image: ghcr.io/rekebuba/backend:latest
    working_dir: /Addis-Software-Test-Project/app/backend
    ports:
      - "5000:5000"
      - "5678:5678"
    env_file:
      - .env
    environment:
      - IS_DOCKER=true
    volumes:
      - .:/Addis-Software-Test-Project:cached
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network

  db:
    container_name: mysql_container
    image: ghcr.io/rekebuba/db:latest
    working_dir: /Addis-Software-Test-Project/app/db
    restart: always
    env_file:
      - .env
    ports:
      - "3307:3306"
    external_links:
      - mysql_container:db # Maps the existing container to 'db'
    networks:
      - app-network
    volumes:
      - mysql_data:/var/lib/mysql
      - ./app/db/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh

volumes:
  mysql_data:

networks:
  app-network:
