name: Build, Push, and Secure Multiple Docker Images to GHCR

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    # Weekly cleanup of old images
    - cron: "0 0 * * 0"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAMESPACE: ${{ github.repository_owner }}
  PLATFORMS: linux/amd64,linux/arm64
  # Retention days for untagged images
  IMAGE_RETENTION_DAYS: 30
  KEEP_RECENT_VERSIONS: 5 # Keep the 5 most recent tagged versions
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Let all matrix jobs complete
      matrix:
        image_config:
          - name: "devcontainer"
            dockerfile: ".devcontainer/Dockerfile"
            context: ".devcontainer"

          - name: "db"
            dockerfile: "app/db/Dockerfile"
            context: "app/db"

          - name: "backend"
            dockerfile: "app/backend/Dockerfile"
            context: "app/backend"

          - name: "frontend"
            dockerfile: "app/frontend/Dockerfile"
            context: "app/frontend"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          platforms: ${{ env.PLATFORMS }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAMESPACE }}/${{ matrix.image_config.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            latest
          labels: |
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.created=${{ steps.meta.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.image_config.context }}
          file: ${{ matrix.image_config.dockerfile }}
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
